html {
	box-sizing: border-box;
}

*,
*:before,
*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
	box-sizing: inherit;
}

body {
	background: $color__background-body; /* Fallback for when there is no custom background color defined. */
}

blockquote, q {
	quotes: "" "";

	&:before,
	&:after {
		content: "";
	}
}

hr {
	background-color: $color__background-hr;
	border: 0;
	height: 1px;
	margin-bottom: 1.5em;
}

@import "lists";

img {
	height: auto; /* Make sure images are scaled correctly. */
	max-width: 100%; /* Adhere to container width. */
}

@import "tables";
@import "banner-ads";

/** Custom Element **/

/** 
 .trigger => is used as generic class and placed on the parent container as opposed to the actualy dom that we want to manipulate 
 .trigger-icon => is used as to name our icon that we're manipulating with. This class is used in the js files as well. this class is the one that gets activated;
 [data-icon="attr"] => is used to differentiate the animation between one icon to another when the .trigger-icon is activated.
*/

.trigger-icon[data-icon="rotate"] {

    @include transition(.2s);

    &:active,
    &:focus,
    &.active {
        transform: rotate(180deg);
    }

}